{"version":3,"sources":["app/appConstants.js","app/appReducer.js","app/routes/home/HomeReducer.js","app/components/common/loader/loaderConstants.js","app/components/common/loader/loaderReducer.js","rootReducer.js","app/routes/home/HomeConstants.js","app/utils/common.js","serviceWorker.js","app/components/header/header.js","app/appActions.js","app/components/header/index.js","app/components/footer/index.js","app/routes/index.js","app/components/scrolltotop/index.js","app/components/common/loader/loader.js","app/components/common/loader/loaderSelectors.js","app/components/common/loader/index.js","app/components/errorBoundary/index.js","app/app.js","app/components/withLocalStorage/index.js","app/appSelectors.js","app/index.js","app/constants/index.js","app/constants/config.js","app/utils/axios.js","app/apis/index.js","app/utils/services.js","app/appSaga.js","rootSagas.js","index.js","store.js"],"names":["SET_DATA","concat","FETCH_CATEGORY","FETCHING_CATEGORY","FETCH_CATEGORY_SUCCESS","FETCH_CATEGORY_ERROR","appInitialState","fromJS","categoryInitialState","isFetching","list","error","initialState","home","SHOW_LOADER","HIDE_LOADER","loaderInitialState","value","combineReducers","_combineReducers","Object","defineProperty","state","arguments","length","undefined","_ref","type","data","merge","action","set","payload","assign","users","_ref2","isServer","window","document","createElement","getLocalStorage","key","localStorage","getItem","JSON","parse","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","Header","react_default","a","className","React","PureComponent","fetchCategory","fetchingCategory","fetchCategorySuccess","fetchCategoryError","mapStateToProps","createStructuredSelector","connect","dispatch","setAppData","Footer","year","Date","getFullYear","sidebar","this","props","role","aria-label","href","Component","Home","Loadable","loader","Promise","all","__webpack_require__","e","bind","loading","NotFound","Routes","path","component","fetchRouteData","routes","Switch","map","route","index","Route","ScrollToTop","prevProps","pathname","scrollTo","children","withRouter","Loader","message","loaderState","get","createSelector","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","App","_this$props","categoryIsFetching","categoryList","_this$props2","errorBoundary","scrolltotop","id","react_toastify","components_header","common_loader","components_footer","WithLocalStorage","Comp","storage","Storage","allKeys","keys","_React$Component","LocalStorage","apply","inherits","createClass","categoryState","selectCategoryIsFetching","selectCategoryList","toJS","selectCategoryError","categoryError","constants","PROD","STAG","LOCAL","STAG_ENV","URL","env","COMMON_ENV","ENV","process","CONST","objectSpread","Axios","baseURL","BASE_URL","paramsSerializer","queryParams","qs","stringify","axiosInstance","axios","create","interceptors","request","use","reject","response","success","APIS","login","logout","blogs","deleteBlog","addBlog","categories","blogDetails","getApiEndPoint","name","ApiService","_ref$method","method","url","_ref$appendUrl","appendUrl","resolve","err","appSaga","_ref$data","regenerator_default","wrap","_context","prev","next","put","sent","abrupt","t0","stop","_marked","_context2","takeLatest","_marked2","rootSaga","app","rootSagas_marked","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","history","createMemoryHistory","initialEntries","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","compose","applyMiddleware","__PRELOADED_STATE__","store","createStore","rootReducer","runSaga","run","Application","es","Router","react_frontload_lib","noServerRender","src_app","root","querySelector","hasChildNodes","preloadReady","hydrate","render"],"mappings":"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","file":"static/js/main.c2100fbf.chunk.js","sourcesContent":["export const APP_STATE_KEY = \"app\";\r\nexport const CATEGORY_STATE_KEY = \"category\";\r\nexport const NAMESPACE = \"APP/\";\r\n\r\n// GLOBAL\r\nexport const SET_DATA = `${NAMESPACE}SET_DATA`;\r\n\r\n// CATEGORY\r\nexport const FETCH_CATEGORY = `${NAMESPACE}FETCH_CATEGORY`;\r\nexport const FETCHING_CATEGORY =  `${NAMESPACE}FETCHING_CATEGORY`;\r\nexport const FETCH_CATEGORY_SUCCESS = `${NAMESPACE}FETCH_CATEGORY_SUCCESS`;\r\nexport const FETCH_CATEGORY_ERROR = `${NAMESPACE}FETCH_CATEGORY_ERROR`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport { SET_DATA, FETCHING_CATEGORY, FETCH_CATEGORY_SUCCESS, FETCH_CATEGORY_ERROR } from \"./appConstants\";\r\n\r\nconst appInitialState = fromJS({});\r\n\r\nexport default (state = appInitialState, {type, data}) => {\r\n  switch (type) {\r\n    case SET_DATA:\r\n      return state.merge(fromJS(data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst categoryInitialState = fromJS({\r\n  isFetching : false,\r\n  list: fromJS([]),\r\n  error : null\r\n});\r\n\r\nexport const categoryReducer = (state = categoryInitialState, {type, data}) => {\r\n  switch (type) {\r\n    case FETCHING_CATEGORY:\r\n      return state.set('isFetching', true);\r\n    case FETCH_CATEGORY_SUCCESS:\r\n      return state.set('isFetching', false).set('list', fromJS(data));\r\n    case FETCH_CATEGORY_ERROR:\r\n      return state.set('isFetching', false).set('error', data);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOME_SAVE_USERS } from \"./HomeConstants\";\r\n\r\nconst initialState = { home: \"HomePage\" };\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case HOME_SAVE_USERS:\r\n      return Object.assign({}, state, { users: payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOADER_STATE_KEY = 'loader';\r\n\r\nexport const NAMESPACE = \"LOADER/\";\r\nexport const SHOW_LOADER = `${NAMESPACE}SHOW`;\r\nexport const HIDE_LOADER = `${NAMESPACE}HIDE`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n} from \"./loaderConstants\";\r\n\r\n\r\nconst loaderInitialState = fromJS({\r\n  value: false\r\n});\r\n\r\nexport default (state = loaderInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return state.set(\"value\", true).set(\"message\", action.data);\r\n    case HIDE_LOADER:\r\n    return state.set(\"value\", false).set(\"message\", undefined);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux-immutable\";\r\n\r\n// App & Category Reducer\r\nimport { APP_STATE_KEY, CATEGORY_STATE_KEY } from \"./app/appConstants\";\r\nimport AppReducer, { categoryReducer } from \"./app/appReducer\";\r\n\r\n// Home Reducer\r\nimport { HOME_STATE_KEY } from \"./app/routes/home/HomeConstants\";\r\nimport HomeReducer from \"./app/routes/home/HomeReducer\";\r\n\r\n// Loader Reducer\r\nimport { LOADER_STATE_KEY } from \"./app/components/common/loader/loaderConstants\";\r\nimport loaderReducer from \"./app/components/common/loader/loaderReducer\";\r\n\r\nexport default combineReducers({\r\n  [APP_STATE_KEY]: AppReducer,\r\n  [LOADER_STATE_KEY]: loaderReducer,\r\n  [HOME_STATE_KEY]: HomeReducer,\r\n  [CATEGORY_STATE_KEY]: categoryReducer\r\n});\r\n","export const HOME_STATE_KEY = \"home\";\r\nexport const HOME_SAVE_USERS = \"HOME_SAVE_USERS\";\r\n","import QueryString from \"query-string\";\r\n\r\n// A nice helper to tell us if we're on the server\r\nexport const isServer = !(\r\n  typeof window !== \"undefined\" &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\n// Set Values in local storage\r\nexport const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n// Get Values from local storage\r\nexport const getLocalStorage = key => {\r\n  let data = localStorage.getItem(key);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// Find a value in arr of objects by id\r\nexport const findValueById = (arr, id) => {\r\n  let list = arr.filter(item => item.id === id)[0];\r\n  if (list) {\r\n    return list.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\n// Process Query Params for API Payload\r\nexport const processQueryParams = (location, storeFilters) => {\r\n  let queryParams = QueryString.parse(location.search, {\r\n    ignoreQueryPrefix: true\r\n  });\r\n  if (\r\n    queryParams &&\r\n    queryParams.category &&\r\n    typeof queryParams.category === \"string\"\r\n  ) {\r\n    queryParams.category = [queryParams.category];\r\n  }\r\n  const payload = { ...storeFilters, ...queryParams };\r\n  payload.limit = queryParams.limit\r\n    ? parseInt(queryParams.limit)\r\n    : storeFilters.limit;\r\n  payload.offset = queryParams.offset\r\n    ? parseInt(queryParams.offset)\r\n    : storeFilters.offset;\r\n  return payload;\r\n};\r\n\r\n// Remove all the empty & null value keys from the object\r\nexport const cleanObject = object => {\r\n  let cleanObject = {};\r\n  let keys = Object.keys(object);\r\n  if (keys) {\r\n    keys.forEach(key => {\r\n      let value = object[key];\r\n      if (value !== \"\" && value !== null && value.length !== 0) {\r\n        cleanObject[key] = value;\r\n      }\r\n    });\r\n  }\r\n  return cleanObject;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nclass Header extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        Header\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  SET_DATA,\r\n  FETCH_CATEGORY,\r\n  FETCHING_CATEGORY,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_CATEGORY_ERROR\r\n} from \"./appConstants\";\r\n\r\n// APP DATA\r\nexport const setAppData = data => ({ type: SET_DATA, data });\r\n\r\n// CATEGORY\r\nexport const fetchCategory = () => ({ type: FETCH_CATEGORY });\r\nexport const fetchingCategory = () => ({ type: FETCHING_CATEGORY });\r\nexport const fetchCategorySuccess = data => ({\r\n  type: FETCH_CATEGORY_SUCCESS,\r\n  data\r\n});\r\nexport const fetchCategoryError = data => ({\r\n  type: FETCH_CATEGORY_ERROR,\r\n  data\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport Header from \"./header\";\r\nimport { setAppData } from \"../../appActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setAppData: data => dispatch(setAppData(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    let year = new Date().getFullYear();\r\n    const { sidebar } = this.props;\r\n    return (\r\n      <footer className={sidebar ? 'footer' : 'footer-no-sidebar'}>\r\n       Copyright © {year} <span className='float-right'>Made with <span role='img' aria-label='heart'>💖</span> by <a href=\"http://abhijangir.me\">Abhishar Jangir.</a></span>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport { fetchCategory } from \"../appActions\";\r\n\r\nconst Home = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"home\" */ \"./home\"),\r\n  loading: () => null\r\n});\r\n\r\n\r\nconst NotFound = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"notfound\" */ \"./notfound\"),\r\n  loading: () => null\r\n});\r\n\r\nexport const Routes = [\r\n  {\r\n    path :\"/\",\r\n    component : Home,\r\n    fetchRouteData : [\r\n      fetchCategory\r\n    ]\r\n  },\r\n  {\r\n    path :\"/not-found\",\r\n    component : NotFound\r\n  }\r\n];\r\n\r\nexport default () => (\r\n  <Switch>\r\n    {Routes.map((route, index) =>\r\n      <Route key={index} {...route} />\r\n    )}\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./loader.scss\";\r\nconst Loader = ({ value, message }) => {\r\n  return value ? (\r\n    <div className=\"loader\">{message || \"Loading... Please wait!\"}</div>\r\n  ) : null;\r\n};\r\n\r\nexport default Loader;\r\n","import { createSelector } from \"reselect\";\r\nimport { LOADER_STATE_KEY } from \"./loaderConstants\";\r\n\r\n// Select App State\r\nexport const loaderState = state => state.get(LOADER_STATE_KEY);\r\n\r\n// Select loader -> value\r\nexport const makeSelectLoaderValue = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"value\")\r\n  );\r\n\r\n  // Select loader -> message\r\nexport const makeSelectLoaderMessage = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"message\")\r\n  );\r\n","import { connect } from \"react-redux\";\r\nimport Loader from \"./loader\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  makeSelectLoaderValue,\r\n  makeSelectLoaderMessage\r\n} from \"./loaderSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  value: makeSelectLoaderValue(),\r\n  message: makeSelectLoaderMessage()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Loader);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport Routes from \"./routes\";\r\nimport ScrollToTop from \"./components/scrolltotop\";\r\nimport Loader from \"./components/common/loader\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const { categoryIsFetching, categoryList, fetchCategory } = this.props;\r\n    if (!categoryIsFetching && categoryList.length === 0) {\r\n      fetchCategory();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { categoryIsFetching, categoryList, fetchCategory } = this.props;\r\n    return (\r\n      <ErrorBoundary>\r\n        <ScrollToTop>\r\n          <div id=\"app\">\r\n            <ToastContainer />\r\n            <Header />\r\n            <div id=\"content\" className=\"content\">\r\n              <div className=\"main\">\r\n                <Routes />\r\n              </div>\r\n              {categoryList.length}\r\n              <Loader />\r\n              <Footer />\r\n            </div>\r\n          </div>\r\n        </ScrollToTop>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { getLocalStorage, isServer } from \"../../utils/common\";\r\n\r\nconst WithLocalStorage = Comp => {\r\n  let storage = {};\r\n  if (typeof Storage !== undefined && !isServer) {\r\n    let allKeys = Object.keys(localStorage);\r\n    for (let index = 0; index < allKeys.length; index++) {\r\n      storage[allKeys[index]] = getLocalStorage(allKeys[index]);\r\n    }\r\n  }\r\n  return class LocalStorage extends React.Component {\r\n    render() {\r\n      return <Comp storage={storage} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import { createSelector } from \"reselect\";\r\nimport { APP_STATE_KEY, CATEGORY_STATE_KEY } from \"./appConstants\";\r\n\r\n// Select App State\r\nexport const appState = state => state.get(APP_STATE_KEY);\r\n\r\n// Category Selectors\r\nexport const categoryState = state => state.get(CATEGORY_STATE_KEY);\r\nexport const selectCategoryIsFetching = createSelector(\r\n  categoryState,\r\n  state => state.get(\"isFetching\")\r\n);\r\nexport const selectCategoryList = createSelector(\r\n  categoryState,\r\n  state => state && state.get(\"list\").toJS()\r\n);\r\nexport const selectCategoryError = createSelector(\r\n  categoryState,\r\n  state => state.get(\"error\")\r\n);\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport App from './app';\r\nimport WithLocalStorage from './components/withLocalStorage';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchCategory } from './appActions';\r\nimport { selectCategoryIsFetching, selectCategoryList, selectCategoryError } from './appSelectors';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categoryIsFetching : selectCategoryIsFetching,\r\n  categoryList : selectCategoryList,\r\n  categoryError : selectCategoryError\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCategory: () => dispatch(fetchCategory())\r\n  };\r\n}\r\n\r\nexport default WithLocalStorage(withRouter(connect(mapStateToProps, mapDispatchToProps)(App)));\r\n","export const PUBLISH = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Published\"\r\n  },\r\n  {\r\n    id: \"0\",\r\n    name: \"Unpublished\"\r\n  }\r\n];\r\nexport const PUBLISHED_BY = [\r\n  {\r\n    id: \"0\",\r\n    name: \"Admin\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Other\"\r\n  }\r\n];\r\nexport const FEATURED = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\nexport const TRENDING = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\n\r\n// eslint-disable-next-line\r\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default {\r\n  APP_NAME: \"Reactor\",\r\n  ENV_TYPES: {\r\n    PROD: \"prod\",\r\n    STAG: \"stag\",\r\n    LOCAL: \"local\"\r\n  }\r\n};\r\n","import CONST from \"./index\";\r\n\r\nconst STAG_ENV = {\r\n  URL: \"http://18.224.169.160:8080/\",\r\n  env: \"Staging\"\r\n};\r\n\r\nconst PROD_ENV = {\r\n  URL: \"http://18.224.169.160:8080/\",\r\n  env: \"Production\"\r\n};\r\n\r\nconst LOCAL_ENV = {\r\n  URL: \"http://192.168.30.83:5000/\",\r\n  env: \"Local\"\r\n};\r\n\r\nconst COMMON_ENV = {\r\n  // Add here if there is any `COMMON ENVIRONMENT VARIABLES`\r\n};\r\n\r\nlet app_env = process.env.REACT_APP_ENV;\r\n\r\nlet ENV = {};\r\n\r\nswitch (app_env) {\r\n  case CONST.ENV_TYPES.PROD:\r\n    ENV = { ...PROD_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.STAG:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.LOCAL:\r\n    ENV = { ...LOCAL_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  default:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n}\r\n\r\nexport default ENV;\r\n","import axios from 'axios';\r\nimport qs from 'query-string';\r\nimport ENV from '../constants/config';\r\nimport { AUTH_FAILED } from '../constants/messages';\r\n\r\nconst Axios = (baseURL) => {\r\n  // AXIOS CONFIGRATION\r\n  let config = {\r\n    baseURL : baseURL || ENV.BASE_URL,\r\n    // timeout : 5000,\r\n    paramsSerializer: function(queryParams) {\r\n      return qs.stringify(queryParams)\r\n    }\r\n  };\r\n\r\n  // CREATE NEW AXIOS INSTANCE\r\n  let axiosInstance = axios.create(config);\r\n\r\n  // REQUEST INTERCEPTOR\r\n  axiosInstance.interceptors.request.use((config) => {\r\n    // Add Headers in Request Here\r\n    // For Example config.headers['token'] =  getAuthToken();\r\n    return config;\r\n  }, (error) => {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  // RESPONSE INTERCEPTOR\r\n  axiosInstance.interceptors.response.use((response) => {\r\n    if (response.data.success) {\r\n      // Handle Response Code here\r\n    }\r\n    // Handle Authentication Failed\r\n    if(!response.data.success && response.data.message === AUTH_FAILED) {\r\n      // Clear Login/Session Data and Redirect to Login Page\r\n    }\r\n    return response;\r\n  }, (error) => {\r\n    return Promise.reject(error);\r\n  });\r\n  return axiosInstance;\r\n}\r\n\r\n// EXPORT A NEW AXIOS INSTANCE\r\nexport default Axios(ENV.URL);\r\n","const APIS = {\r\n  login: \"signin\",\r\n  logout: \"signout\",\r\n  blogs: \"stories/filter\",\r\n  deleteBlog: \"story/delete\",\r\n  addBlog: \"story/add\",\r\n  categories: \"categories\",\r\n  blogDetails: \"story\"\r\n};\r\n\r\nconst getApiEndPoint = name => {\r\n  if (name && APIS[name]) return APIS[name];\r\n  return \"\";\r\n};\r\n\r\nexport default getApiEndPoint;\r\n","import axios from \"./axios\";\r\nimport getApiEndPoint from \"../apis\";\r\n\r\nconst ApiService = ({ method = \"GET\", url, data, appendUrl = '' }) => {\r\n  url = getApiEndPoint(url) + appendUrl;\r\n  return new Promise((resolve, reject) => {\r\n    axios({ url, method, data })\r\n      .then(response => {\r\n        resolve({ ...response });\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default ApiService;\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { FETCH_CATEGORY } from \"./appConstants\";\r\nimport {\r\n  fetchingCategory,\r\n  fetchCategorySuccess,\r\n  fetchCategoryError\r\n} from \"./appActions\";\r\nimport ApiService from \"./utils/services\";\r\n\r\nfunction* fetchCategory() {\r\n  try {\r\n    yield put(fetchingCategory());\r\n    const {\r\n      data: { success, message, data }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"categories\"\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchCategorySuccess(data));\r\n    } else {\r\n      return yield put(fetchCategoryError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchCategoryError(err));\r\n  }\r\n}\r\n\r\nexport function* appSaga() {\r\n  yield takeLatest(FETCH_CATEGORY, fetchCategory);\r\n}\r\n\r\nexport default appSaga;\r\n","import { all } from 'redux-saga/effects';\r\nimport app from './app/appSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    app(),\r\n  ]);\r\n}\r\n","import \"@babel/polyfill\";\r\nimport React from \"react\";\r\nimport { render, hydrate } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Loadable from \"react-loadable\";\r\nimport { Frontload } from \"react-frontload\";\r\nimport { Router } from \"react-router-dom\";\r\nimport createStore from \"./store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport \"./app/styles/main.scss\";\r\nimport App from \"./app\";\r\nimport rootSaga from \"./rootSagas\";\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n// Create a store and get back itself and its history object\r\nconst { store, history } = createStore();\r\nstore.runSaga(rootSaga);\r\n\r\n// Running locally, we should run on a <ConnectedRouter /> rather than on a <StaticRouter /> like on the server\r\n// Let's also let React Frontload explicitly know we're not rendering on the server here\r\nconst Application = (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Frontload noServerRender={true}>\r\n        <App />\r\n      </Frontload>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nconst root = document.querySelector(\"#root\");\r\n\r\nif (root.hasChildNodes() === true) {\r\n  // If it's an SSR, we use hydrate to get fast page loads by just\r\n  // attaching event listeners after the initial render\r\n  Loadable.preloadReady().then(() => {\r\n    hydrate(Application, root);\r\n  });\r\n} else {\r\n  // If we're not running on the server, just render like normal\r\n  render(Application, root);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fromJS } from 'immutable';\r\nimport rootReducer from \"./rootReducer\";\r\nimport { isServer } from \"./app/utils/common\";\r\n\r\nexport default (url = \"/\") => {\r\n  // Create a history depending on the environment\r\n  const history = isServer\r\n    ? createMemoryHistory({\r\n        initialEntries: [url]\r\n      })\r\n    : createBrowserHistory();\r\n\r\n  const enhancers = [];\r\n\r\n  // Dev tools are helpful\r\n  if (process.env.NODE_ENV === \"development\" && !isServer) {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\n    if (typeof devToolsExtension === \"function\") {\r\n      enhancers.push(devToolsExtension());\r\n    }\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = [routerMiddleware(history), sagaMiddleware];\r\n  const composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n  );\r\n\r\n  // Do we have preloaded state available? Great, save it.\r\n  const initialState = !isServer ? window.__PRELOADED_STATE__ : {};\r\n\r\n  // Delete it once we have it stored in a variable\r\n  if (!isServer) {\r\n    delete window.__PRELOADED_STATE__;\r\n  }\r\n\r\n  // Create the store\r\n  const store = createStore(\r\n    rootReducer,\r\n    fromJS(initialState),\r\n    composedEnhancers\r\n  );\r\n  store.runSaga = sagaMiddleware.run;\r\n\r\n  return {\r\n    store,\r\n    history\r\n  };\r\n};\r\n"],"sourceRoot":""}