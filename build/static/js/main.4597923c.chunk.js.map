{"version":3,"sources":["app/containers/app/appConstants.js","app/components/common/Image/image.js","app/components/errorBoundary/index.js","app/containers/pages/blogdetail/blogdetailConstants.js","app/containers/todaysSpotlight/todaysSpotlightConstants.js","app/containers/app/appReducer.js","app/components/common/loader/loaderConstants.js","app/components/common/loader/loaderReducer.js","app/containers/todaysSpotlight/todaysSpotlightReducer.js","app/containers/pages/blogdetail/blogdetailReducer.js","rootReducer.js","serviceWorker.js","app/components/typehead/typehead.js","app/components/header/header.js","app/components/footer/index.js","app/containers/app/appActions.js","app/routes/index.js","app/components/scrolltotop/index.js","app/components/common/loader/loader.js","app/components/common/loader/loaderSelectors.js","app/components/common/loader/index.js","app/components/app/app.js","app/components/withLocalStorage/index.js","app/containers/app/app.js","app/constants/index.js","app/constants/config.js","app/utils/axios.js","app/apis/index.js","app/utils/services.js","app/containers/app/appSaga.js","app/containers/todaysSpotlight/todaysSpotlightSaga.js","app/containers/pages/blogdetail/blogdetailSaga.js","rootSagas.js","index.js","store.js","app/components/layout/index.js","app/utils/common.js","app/containers/app/appSelectors.js","app/containers/todaysSpotlight/todaysSpotlightActions.js","app/containers/pages/blogdetail/blogdetailActions.js"],"names":["__webpack_require__","d","__webpack_exports__","APP_STATE_KEY","CATEGORY_STATE_KEY","TRENDING_BLOGS_STATE_KEY","SET_DATA","FETCH_CATEGORY","FETCHING_CATEGORY","FETCH_CATEGORY_SUCCESS","FETCH_CATEGORY_ERROR","FETCH_TRENDING_BLOGS","FETCHING_TRENDING_BLOGS","FETCH_TRENDING_BLOGS_SUCCESS","FETCH_TRENDING_BLOGS_ERROR","concat","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Image","_ref","src","alt","className","width","height","a","createElement","ErrorBoundary","props","_this","Object","C_Abhishar_demo_blogtheme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Abhishar_demo_blogtheme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Abhishar_demo_blogtheme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","hasError","error","info","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","children","Component","BLOG_DETAIL_STATE_KEY","FETCH_BLOG_DETAIL","FETCHING_BLOG_DETAIL","FETCH_BLOG_DETAIL_SUCCESS","FETCH_BLOG_DETAIL_ERROR","RESET_BLOG_DETAIL","TODAYS_SPOTLIGHT_STATE_KEY","FETCH_TODAY_SPOTLIGHT","FETCHING_TODAY_SPOTLIGHT","FETCH_TODAY_SPOTLIGHT_SUCCESS","FETCH_TODAY_SPOTLIGHT_ERROR","NAMESPACE","appInitialState","fromJS","categoryInitialState","isFetching","list","trendingBlogsInitialState","SHOW_LOADER","HIDE_LOADER","loaderInitialState","value","initialState","todaysSpotlightReducer","arguments","length","undefined","type","data","set","blogDetailReducer","combineReducers","_combineReducers","defineProperty","merge","action","_ref2","_ref3","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Typehead","react_default","placeholder","React","PureComponent","NAVIGATION","name","to","Header","renderLogo","layout","lg","Link","Image_image","renderTypehead","typehead_typehead","renderNavigation","map","nav","key","Footer","year","Date","getFullYear","sidebar","role","aria-label","href","fetchCategory","fetchingCategory","fetchCategorySuccess","fetchCategoryError","fetchTrendingBlogs","fetchingTrendingBlogs","fetchTrendingBlogsSuccess","fetchTrendingBlogsError","Loading","Home","Loadable","loader","Promise","all","e","bind","loading","modules","BlogDeatail","NotFound","Routes","path","component","fetchRouteData","fetchTodaySpotlight","exact","fetchBlogDeatil","routes","Switch","route","index","Route","assign","ScrollToTop","prevProps","pathname","scrollTo","withRouter","Loader","message","loaderState","get","mapStateToProps","createStructuredSelector","createSelector","connect","App","_this$props","categoryIsFetching","categoryList","trendingBlogList","trendingBlogsIsFetching","errorBoundary","scrolltotop","id","react_toastify","header_header","components_footer","common_loader","WithLocalStorage","Comp","storage","Storage","isServer","allKeys","keys","localStorage","getLocalStorage","_React$Component","LocalStorage","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","selectCategoryIsFetching","selectCategoryList","categoryError","selectCategoryError","selectTrendingBlogsIsFetching","selectTrendingBlogsList","trendingBlogsError","selectTrendingBlogsError","dispatch","constants","PROD","STAG","LOCAL","STAG_ENV","URL","env","COMMON_ENV","ENV","process","CONST","objectSpread","Axios","baseURL","BASE_URL","paramsSerializer","queryParams","qs","stringify","axiosInstance","axios","create","interceptors","request","use","reject","response","success","APIS","login","logout","blogs","deleteBlog","addBlog","categories","blogDetails","getApiEndPoint","ApiService","_ref$method","method","url","_ref$appendUrl","appendUrl","resolve","err","appSaga","_ref$data","regenerator_default","wrap","_context","prev","next","put","sent","abrupt","t0","stop","_marked","_ref2$data","_context2","isTrending","offset","limit","_marked2","_context3","takeLatest","_marked3","fetchTodaysSpotlight","todaysSpotlightSaga","fetchingTodaySpotlight","isFeatured","fetchTodaySpotlightSuccess","fetchTodaySpotlightError","todaysSpotlightSaga_marked","todaysSpotlightSaga_marked2","fetchBlogDetail","blogDetailSaga","payload","fetchingBlogDeatil","blogId","fetchBlogDeatilSuccess","fetchBlogDeatilError","blogdetailSaga_marked","blogdetailSaga_marked2","rootSaga","callSagas","sagas","calledSagaList","forEach","saga","push","toConsumableArray","app","rootSagas_marked","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","history","createMemoryHistory","initialEntries","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","compose","applyMiddleware","__PRELOADED_STATE__","store","createStore","rootReducer","runSaga","run","Application","es","Router","app_app","root","document","querySelector","hasChildNodes","preloadReady","hydrate","render","Row","Container","Col","_ref5","xs","sm","md","classes","getItem","JSON","parse","getCategoryDataFromBlog","blog","category","blogFirstCategory","matchedCategories","filter","cat","_id","toString","getBlogUrl","title","toLowerCase","split","join","replace","getCategoryUrl","getTimeString","date","moment","format","extractShortDescription","htmlString","p","innerHTML","textContent","innerText","slice","reselect__WEBPACK_IMPORTED_MODULE_0__","_appConstants__WEBPACK_IMPORTED_MODULE_1__","categoryState","toJS","trendingBlogsState","_todaysSpotlightConstants__WEBPACK_IMPORTED_MODULE_0__","resetBlogDetail","_blogdetailConstants__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.4597923c.chunk.js","sourcesContent":["export const APP_STATE_KEY = \"app\";\r\nexport const CATEGORY_STATE_KEY = \"category\";\r\nexport const TRENDING_BLOGS_STATE_KEY = \"trending\";\r\nexport const NAMESPACE = \"APP/\";\r\n\r\n// GLOBAL\r\nexport const SET_DATA = `${NAMESPACE}SET_DATA`;\r\n\r\n// CATEGORY\r\nexport const FETCH_CATEGORY = `${NAMESPACE}FETCH_CATEGORY`;\r\nexport const FETCHING_CATEGORY = `${NAMESPACE}FETCHING_CATEGORY`;\r\nexport const FETCH_CATEGORY_SUCCESS = `${NAMESPACE}FETCH_CATEGORY_SUCCESS`;\r\nexport const FETCH_CATEGORY_ERROR = `${NAMESPACE}FETCH_CATEGORY_ERROR`;\r\n\r\n// TRENDING CATEGORY\r\nexport const FETCH_TRENDING_BLOGS = `${NAMESPACE}FETCH_TRENDING_BLOGS`;\r\nexport const FETCHING_TRENDING_BLOGS = `${NAMESPACE}FETCHING_TRENDING_BLOGS`;\r\nexport const FETCH_TRENDING_BLOGS_SUCCESS = `${NAMESPACE}FETCH_TRENDING_BLOGS_SUCCESS`;\r\nexport const FETCH_TRENDING_BLOGS_ERROR = `${NAMESPACE}FETCH_TRENDING_BLOGS_ERROR`;\r\n","import React from \"react\";\r\n\r\nconst Image = ({ src, alt, className, width, height }) => {\r\n  return <img src={src} alt={alt} className={className ? className : \"\"} width={width} height={height} />;\r\n};\r\n\r\nexport default Image;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const BLOG_DETAIL_STATE_KEY = \"blogDetail\";\r\nexport const NAMESPACE = \"BLOG_DETAIL/\";\r\n\r\n// TODAYs SPOTLIGHT\r\nexport const FETCH_BLOG_DETAIL = `${NAMESPACE}FETCH_BLOG_DETAIL`;\r\nexport const FETCHING_BLOG_DETAIL = `${NAMESPACE}FETCHING_BLOG_DETAIL`;\r\nexport const FETCH_BLOG_DETAIL_SUCCESS = `${NAMESPACE}FETCH_BLOG_DETAIL_SUCCESS`;\r\nexport const FETCH_BLOG_DETAIL_ERROR = `${NAMESPACE}FETCH_BLOG_DETAIL_ERROR`;\r\nexport const RESET_BLOG_DETAIL = `${NAMESPACE}RESET_BLOG_DETAIL`;\r\n","export const TODAYS_SPOTLIGHT_STATE_KEY = \"todaysSpotlight\";\r\nexport const NAMESPACE = \"TODAY_SPOTLIGHT/\";\r\n\r\n// TODAYs SPOTLIGHT\r\nexport const FETCH_TODAY_SPOTLIGHT = `${NAMESPACE}FETCH_TODAY_SPOTLIGHT`;\r\nexport const FETCHING_TODAY_SPOTLIGHT = `${NAMESPACE}FETCHING_TODAY_SPOTLIGHT`;\r\nexport const FETCH_TODAY_SPOTLIGHT_SUCCESS = `${NAMESPACE}FETCH_TODAY_SPOTLIGHT_SUCCESS`;\r\nexport const FETCH_TODAY_SPOTLIGHT_ERROR = `${NAMESPACE}FETCH_TODAY_SPOTLIGHT_ERROR`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SET_DATA,\r\n  FETCHING_CATEGORY,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_CATEGORY_ERROR,\r\n  FETCHING_TRENDING_BLOGS,\r\n  FETCH_TRENDING_BLOGS_SUCCESS,\r\n  FETCH_TRENDING_BLOGS_ERROR\r\n} from \"./appConstants\";\r\n\r\nconst appInitialState = fromJS({});\r\n\r\nexport default (state = appInitialState, { type, data }) => {\r\n  switch (type) {\r\n    case SET_DATA:\r\n      return state.merge(fromJS(data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst categoryInitialState = fromJS({\r\n  isFetching: false,\r\n  list: fromJS([]),\r\n  error: null\r\n});\r\n\r\nexport const categoryReducer = (\r\n  state = categoryInitialState,\r\n  { type, data }\r\n) => {\r\n  switch (type) {\r\n    case FETCHING_CATEGORY:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_CATEGORY_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"list\", fromJS(data));\r\n    case FETCH_CATEGORY_ERROR:\r\n      return state.set(\"isFetching\", false).set(\"error\", data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst trendingBlogsInitialState = fromJS({\r\n  isFetching: false,\r\n  list: fromJS([]),\r\n  error: null\r\n});\r\n\r\nexport const trendingBlogsReducer = (\r\n  state = trendingBlogsInitialState,\r\n  { type, data }\r\n) => {\r\n  switch (type) {\r\n    case FETCHING_TRENDING_BLOGS:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_TRENDING_BLOGS_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"list\", fromJS(data));\r\n    case FETCH_TRENDING_BLOGS_ERROR:\r\n      return state.set(\"isFetching\", false).set(\"error\", data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOADER_STATE_KEY = 'loader';\r\n\r\nexport const NAMESPACE = \"LOADER/\";\r\nexport const SHOW_LOADER = `${NAMESPACE}SHOW`;\r\nexport const HIDE_LOADER = `${NAMESPACE}HIDE`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n} from \"./loaderConstants\";\r\n\r\n\r\nconst loaderInitialState = fromJS({\r\n  value: false\r\n});\r\n\r\nexport default (state = loaderInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return state.set(\"value\", true).set(\"message\", action.data);\r\n    case HIDE_LOADER:\r\n    return state.set(\"value\", false).set(\"message\", undefined);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n  FETCHING_TODAY_SPOTLIGHT,\r\n  FETCH_TODAY_SPOTLIGHT_SUCCESS,\r\n  FETCH_TODAY_SPOTLIGHT_ERROR\r\n} from \"./todaysSpotlightConstants\";\r\n\r\nconst initialState = fromJS({\r\n  isFetching: false,\r\n  list: fromJS([]),\r\n  error: null\r\n});\r\n\r\nexport const todaysSpotlightReducer = (\r\n  state = initialState,\r\n  { type, data }\r\n) => {\r\n  switch (type) {\r\n    case FETCHING_TODAY_SPOTLIGHT:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_TODAY_SPOTLIGHT_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"list\", fromJS(data));\r\n    case FETCH_TODAY_SPOTLIGHT_ERROR:\r\n      return state.set(\"isFetching\", false).set(\"error\", data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todaysSpotlightReducer;\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n  FETCHING_BLOG_DETAIL,\r\n  FETCH_BLOG_DETAIL_SUCCESS,\r\n  FETCH_BLOG_DETAIL_ERROR,\r\n  RESET_BLOG_DETAIL\r\n} from \"./blogdetailConstants\";\r\n\r\nconst initialState = fromJS({\r\n  isFetching: false,\r\n  data: fromJS({}),\r\n  error: null\r\n});\r\n\r\nexport const blogDetailReducer = (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case FETCHING_BLOG_DETAIL:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_BLOG_DETAIL_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"data\", fromJS(data));\r\n    case FETCH_BLOG_DETAIL_ERROR:\r\n      return state.set(\"isFetching\", false).set(\"error\", data);\r\n    case RESET_BLOG_DETAIL:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogDetailReducer;\r\n","import { combineReducers } from \"redux-immutable\";\r\n\r\n// App & Category Reducer\r\nimport {\r\n  APP_STATE_KEY,\r\n  CATEGORY_STATE_KEY,\r\n  TRENDING_BLOGS_STATE_KEY\r\n} from \"./app/containers/app/appConstants\";\r\nimport AppReducer, {\r\n  categoryReducer,\r\n  trendingBlogsReducer\r\n} from \"./app/containers/app/appReducer\";\r\n\r\n// Loader Reducer\r\nimport { LOADER_STATE_KEY } from \"./app/components/common/loader/loaderConstants\";\r\nimport loaderReducer from \"./app/components/common/loader/loaderReducer\";\r\n\r\n// Today's Spotlight\r\nimport { TODAYS_SPOTLIGHT_STATE_KEY } from \"./app/containers/todaysSpotlight/todaysSpotlightConstants\";\r\nimport todaysSpotlightReducer from \"./app/containers/todaysSpotlight/todaysSpotlightReducer\";\r\n\r\n// Blog Deatil\r\nimport { BLOG_DETAIL_STATE_KEY } from \"./app/containers/pages/blogdetail/blogdetailConstants\";\r\nimport blogDetailReducer from \"./app/containers/pages/blogdetail/blogdetailReducer\";\r\n\r\nexport default combineReducers({\r\n  [APP_STATE_KEY]: AppReducer,\r\n  [LOADER_STATE_KEY]: loaderReducer,\r\n  [CATEGORY_STATE_KEY]: categoryReducer,\r\n  [TRENDING_BLOGS_STATE_KEY]: trendingBlogsReducer,\r\n  [TODAYS_SPOTLIGHT_STATE_KEY]: todaysSpotlightReducer,\r\n  [BLOG_DETAIL_STATE_KEY]: blogDetailReducer\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./typehead.scss\";\r\n\r\nclass Typehead extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"typehead-container\">\r\n        <input className=\"typehead\" placeholder=\"Search Blog\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typehead;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.scss\";\r\nimport { Container, Col, Row } from \"../layout\";\r\nimport Typehead from \"../typehead/typehead\";\r\nimport Image from \"../common/Image/image\";\r\n\r\nconst NAVIGATION = [\r\n  {\r\n    name: \"Home\",\r\n    to: \"/\"\r\n  },\r\n  {\r\n    name: \"Categories\",\r\n    to: \"#\"\r\n  },\r\n  {\r\n    name: \"Trending\",\r\n    to: \"/trending\"\r\n  },\r\n  {\r\n    name: \"Featured\",\r\n    to: \"/featured\"\r\n  },\r\n  {\r\n    name: \"Bookmarks\",\r\n    to: \"/bookmarks\"\r\n  }\r\n];\r\n\r\nclass Header extends React.PureComponent {\r\n  renderLogo = () => {\r\n    return (\r\n      <Col lg={2}>\r\n        <Link to='/'>\r\n          <Image src={'https://s3.ap-south-1.amazonaws.com/imabhi.in/logo.png'} className='mt-2' width=\"60px\" alt=\"logo\" />\r\n        </Link>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  renderTypehead = () => {\r\n    return (\r\n      <Col lg={5}>\r\n        <Typehead />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  renderNavigation = () => {\r\n    return (\r\n      <Col lg={10}>\r\n        <div className=\"navigation\">\r\n          <ul>\r\n            {NAVIGATION.map(nav => (\r\n              <li key={nav.name}>\r\n                <Link to={nav.to}>{nav.name}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <Container>\r\n          <Row>\r\n            {this.renderLogo()}\r\n            {/* {this.renderNavigation()} */}\r\n            {/* {this.renderTypehead()} */}\r\n          </Row>\r\n        </Container>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.scss\";\r\nimport { Container } from \"../layout\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    let year = new Date().getFullYear();\r\n    const { sidebar } = this.props;\r\n    return (\r\n      <footer className={sidebar ? \"footer\" : \"footer-no-sidebar\"}>\r\n        <Container>\r\n          Copyright © {year}\r\n          <span className=\"float-right\">\r\n            Made with\r\n            <span role=\"img\" aria-label=\"heart\">\r\n              💖\r\n            </span>\r\n            by <a href=\"http://abhijangir.me\">Abhishar Jangir.</a>\r\n          </span>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n  SET_DATA,\r\n  FETCH_CATEGORY,\r\n  FETCHING_CATEGORY,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_CATEGORY_ERROR,\r\n  FETCH_TRENDING_BLOGS,\r\n  FETCHING_TRENDING_BLOGS,\r\n  FETCH_TRENDING_BLOGS_SUCCESS,\r\n  FETCH_TRENDING_BLOGS_ERROR\r\n} from \"./appConstants\";\r\n\r\n// APP DATA\r\nexport const setAppData = data => ({ type: SET_DATA, data });\r\n\r\n// CATEGORY\r\nexport const fetchCategory = () => ({ type: FETCH_CATEGORY });\r\nexport const fetchingCategory = () => ({ type: FETCHING_CATEGORY });\r\nexport const fetchCategorySuccess = data => ({\r\n  type: FETCH_CATEGORY_SUCCESS,\r\n  data\r\n});\r\nexport const fetchCategoryError = data => ({\r\n  type: FETCH_CATEGORY_ERROR,\r\n  data\r\n});\r\n\r\n// TRENDING BLOGS\r\nexport const fetchTrendingBlogs = () => ({ type: FETCH_TRENDING_BLOGS });\r\nexport const fetchingTrendingBlogs = () => ({ type: FETCHING_TRENDING_BLOGS });\r\nexport const fetchTrendingBlogsSuccess = data => ({\r\n  type: FETCH_TRENDING_BLOGS_SUCCESS,\r\n  data\r\n});\r\nexport const fetchTrendingBlogsError = data => ({\r\n  type: FETCH_TRENDING_BLOGS_ERROR,\r\n  data\r\n});\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport {\r\n  fetchCategory,\r\n  fetchTrendingBlogs\r\n} from \"../containers/app/appActions\";\r\nimport { fetchTodaySpotlight } from \"../containers/todaysSpotlight/todaysSpotlightActions\";\r\nimport { fetchBlogDeatil } from \"../containers/pages/blogdetail/blogdetailActions\";\r\n\r\nconst Loading = <span />;\r\n\r\nconst Home = Loadable({\r\n  loader: () =>\r\n    import(/* webpackChunkName: \"home\" */ \"../containers/pages/home\"),\r\n  loading: () => Loading,\r\n  modules: [\"home\"]\r\n});\r\n\r\nconst BlogDeatail = Loadable({\r\n  loader: () =>\r\n    import(/* webpackChunkName: \"blogdeatil\" */ \"../containers/pages/blogdetail\"),\r\n  loading: () => Loading,\r\n  modules: [\"blogdeatil\"]\r\n});\r\n\r\nconst NotFound = Loadable({\r\n  loader: () =>\r\n    import(/* webpackChunkName: \"notfound\" */ \"../containers/pages/notfound\"),\r\n  loading: () => Loading,\r\n  modules: [\"notfound\"]\r\n});\r\n\r\nexport const Routes = [\r\n  {\r\n    path: \"/\",\r\n    component: Home,\r\n    fetchRouteData: [fetchCategory, fetchTrendingBlogs, fetchTodaySpotlight],\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/blog/:blogName/:blogId\",\r\n    component: BlogDeatail,\r\n    fetchRouteData: [fetchBlogDeatil, fetchCategory],\r\n    exact: true\r\n  },\r\n  {\r\n    component: NotFound\r\n  }\r\n];\r\n\r\nexport default () => (\r\n  <Switch>\r\n    {Routes.map((route, index) => (\r\n      <Route key={index} {...route} />\r\n    ))}\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./loader.scss\";\r\nconst Loader = ({ value, message }) => {\r\n  return value ? (\r\n    <div className=\"loader\">{message || \"Loading... Please wait!\"}</div>\r\n  ) : null;\r\n};\r\n\r\nexport default Loader;\r\n","import { createSelector } from \"reselect\";\r\nimport { LOADER_STATE_KEY } from \"./loaderConstants\";\r\n\r\n// Select App State\r\nexport const loaderState = state => state.get(LOADER_STATE_KEY);\r\n\r\n// Select loader -> value\r\nexport const makeSelectLoaderValue = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"value\")\r\n  );\r\n\r\n  // Select loader -> message\r\nexport const makeSelectLoaderMessage = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"message\")\r\n  );\r\n","import { connect } from \"react-redux\";\r\nimport Loader from \"./loader\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  makeSelectLoaderValue,\r\n  makeSelectLoaderMessage\r\n} from \"./loaderSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  value: makeSelectLoaderValue(),\r\n  message: makeSelectLoaderMessage()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Loader);\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\nimport Routes from \"../../routes\";\r\nimport ScrollToTop from \"../scrolltotop\";\r\nimport Loader from \"../common/loader\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      categoryIsFetching,\r\n      categoryList,\r\n      fetchCategory,\r\n      fetchTrendingBlogs,\r\n      trendingBlogList,\r\n      trendingBlogsIsFetching\r\n    } = this.props;\r\n    if (!categoryIsFetching && categoryList.length === 0) {\r\n      fetchCategory();\r\n    }\r\n    if (!trendingBlogsIsFetching && trendingBlogList.length === 0) {\r\n      fetchTrendingBlogs();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <ScrollToTop>\r\n          <div id=\"app\">\r\n            <ToastContainer />\r\n            <Header />\r\n            <div id=\"content\" className=\"content\">\r\n              <Routes />\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n          <Loader />\r\n        </ScrollToTop>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { getLocalStorage, isServer } from \"../../utils/common\";\r\n\r\nconst WithLocalStorage = Comp => {\r\n  let storage = {};\r\n  if (typeof Storage !== undefined && !isServer) {\r\n    let allKeys = Object.keys(localStorage);\r\n    for (let index = 0; index < allKeys.length; index++) {\r\n      storage[allKeys[index]] = getLocalStorage(allKeys[index]);\r\n    }\r\n  }\r\n  return class LocalStorage extends React.Component {\r\n    render() {\r\n      return <Comp storage={storage} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport App from \"../../components/app\";\r\nimport WithLocalStorage from \"../../components/withLocalStorage\";\r\nimport { fetchCategory, fetchTrendingBlogs } from \"./appActions\";\r\nimport {\r\n  selectCategoryIsFetching,\r\n  selectCategoryList,\r\n  selectCategoryError,\r\n  selectTrendingBlogsIsFetching,\r\n  selectTrendingBlogsList,\r\n  selectTrendingBlogsError\r\n} from \"./appSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categoryIsFetching: selectCategoryIsFetching,\r\n  categoryList: selectCategoryList,\r\n  categoryError: selectCategoryError,\r\n  trendingBlogsIsFetching: selectTrendingBlogsIsFetching,\r\n  trendingBlogList: selectTrendingBlogsList,\r\n  trendingBlogsError: selectTrendingBlogsError\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCategory: () => dispatch(fetchCategory()),\r\n  fetchTrendingBlogs: () => dispatch(fetchTrendingBlogs())\r\n});\r\n\r\nexport default WithLocalStorage(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(App)\r\n  )\r\n);\r\n","export const PUBLISH = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Published\"\r\n  },\r\n  {\r\n    id: \"0\",\r\n    name: \"Unpublished\"\r\n  }\r\n];\r\nexport const PUBLISHED_BY = [\r\n  {\r\n    id: \"0\",\r\n    name: \"Admin\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Other\"\r\n  }\r\n];\r\nexport const FEATURED = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\nexport const TRENDING = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\n\r\n// eslint-disable-next-line\r\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default {\r\n  APP_NAME: \"Reactor\",\r\n  ENV_TYPES: {\r\n    PROD: \"prod\",\r\n    STAG: \"stag\",\r\n    LOCAL: \"local\"\r\n  }\r\n};\r\n","import CONST from \"./index\";\r\n\r\nconst STAG_ENV = {\r\n  URL: \"https://api.abhijangir.me/\",\r\n  env: \"Staging\"\r\n};\r\n\r\nconst PROD_ENV = {\r\n  URL: \"https://api.abhijangir.me/\",\r\n  env: \"Production\"\r\n};\r\n\r\nconst LOCAL_ENV = {\r\n  URL: \"http://18.224.169.160:8080/\",\r\n  env: \"Local\"\r\n};\r\n\r\nconst COMMON_ENV = {\r\n  // Add here if there is any `COMMON ENVIRONMENT VARIABLES`\r\n};\r\n\r\nlet app_env = process.env.REACT_APP_ENV;\r\n\r\nlet ENV = {};\r\n\r\nswitch (app_env) {\r\n  case CONST.ENV_TYPES.PROD:\r\n    ENV = { ...PROD_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.STAG:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.LOCAL:\r\n    ENV = { ...LOCAL_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  default:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n}\r\n\r\nexport default ENV;\r\n","import axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport ENV from \"../constants/config\";\r\nimport { AUTH_FAILED } from \"../constants/messages\";\r\n\r\nconst Axios = baseURL => {\r\n  // AXIOS CONFIGRATION\r\n  let config = {\r\n    baseURL: baseURL || ENV.BASE_URL,\r\n    // timeout : 5000,\r\n    paramsSerializer: function(queryParams) {\r\n      return qs.stringify(queryParams);\r\n    }\r\n  };\r\n\r\n  // CREATE NEW AXIOS INSTANCE\r\n  let axiosInstance = axios.create(config);\r\n\r\n  // REQUEST INTERCEPTOR\r\n  axiosInstance.interceptors.request.use(\r\n    config => {\r\n      // Add Headers in Request Here\r\n      // For Example config.headers['token'] =  getAuthToken();\r\n      return config;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // RESPONSE INTERCEPTOR\r\n  axiosInstance.interceptors.response.use(\r\n    response => {\r\n      if (response.data.success) {\r\n        // Handle Response Code here\r\n      }\r\n      // Handle Authentication Failed\r\n      if (!response.data.success && response.data.message === AUTH_FAILED) {\r\n        // Clear Login/Session Data and Redirect to Login Page\r\n      }\r\n      return response;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return axiosInstance;\r\n};\r\n\r\n// EXPORT A NEW AXIOS INSTANCE\r\nexport default Axios(ENV.URL);\r\n","const APIS = {\r\n  login: \"signin\",\r\n  logout: \"signout\",\r\n  blogs: \"stories/filter\",\r\n  deleteBlog: \"story/delete\",\r\n  addBlog: \"story/add\",\r\n  categories: \"categories\",\r\n  blogDetails: \"story\"\r\n};\r\n\r\nconst getApiEndPoint = name => {\r\n  if (name && APIS[name]) return APIS[name];\r\n  return \"\";\r\n};\r\n\r\nexport default getApiEndPoint;\r\n","import axios from \"./axios\";\r\nimport getApiEndPoint from \"../apis\";\r\n\r\nconst ApiService = ({ method = \"GET\", url, data, appendUrl = '' }) => {\r\n  url = getApiEndPoint(url) + appendUrl;\r\n  return new Promise((resolve, reject) => {\r\n    axios({ url, method, data })\r\n      .then(response => {\r\n        resolve({ ...response });\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default ApiService;\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { FETCH_CATEGORY, FETCH_TRENDING_BLOGS } from \"./appConstants\";\r\nimport {\r\n  fetchingCategory,\r\n  fetchCategorySuccess,\r\n  fetchCategoryError,\r\n  fetchTrendingBlogsSuccess,\r\n  fetchTrendingBlogsError,\r\n  fetchingTrendingBlogs\r\n} from \"./appActions\";\r\nimport ApiService from \"../../utils/services\";\r\n\r\nfunction* fetchCategory() {\r\n  try {\r\n    yield put(fetchingCategory());\r\n    const {\r\n      data: { success, message, data }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"categories\"\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchCategorySuccess(data));\r\n    } else {\r\n      return yield put(fetchCategoryError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchCategoryError(err));\r\n  }\r\n}\r\n\r\nfunction* fetchTrendingBlogs() {\r\n  try {\r\n    yield put(fetchingTrendingBlogs());\r\n    const {\r\n      data: { success, message, data }\r\n    } = yield call(ApiService, {\r\n      method: \"POST\",\r\n      url: \"blogs\",\r\n      data: { isTrending: \"1\", offset: 0, limit: 20 }\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchTrendingBlogsSuccess(data));\r\n    } else {\r\n      return yield put(fetchTrendingBlogsError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchTrendingBlogsError(err));\r\n  }\r\n}\r\n\r\nexport function* appSaga() {\r\n  yield takeLatest(FETCH_CATEGORY, fetchCategory);\r\n  yield takeLatest(FETCH_TRENDING_BLOGS, fetchTrendingBlogs);\r\n}\r\n\r\nexport default appSaga;\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { FETCH_TODAY_SPOTLIGHT } from \"./todaysSpotlightConstants\";\r\nimport {\r\n  fetchingTodaySpotlight,\r\n  fetchTodaySpotlightSuccess,\r\n  fetchTodaySpotlightError\r\n} from \"./todaysSpotlightActions\";\r\nimport ApiService from \"../../utils/services\";\r\n\r\nfunction* fetchTodaysSpotlight() {\r\n  try {\r\n    yield put(fetchingTodaySpotlight());\r\n    const {\r\n      data: { success, message, data }\r\n    } = yield call(ApiService, {\r\n      method: \"POST\",\r\n      url: \"blogs\",\r\n      data: { isFeatured: \"1\", offset: 0, limit: 20 }\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchTodaySpotlightSuccess(data));\r\n    } else {\r\n      return yield put(fetchTodaySpotlightError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchTodaySpotlightError(err));\r\n  }\r\n}\r\n\r\nexport function* todaysSpotlightSaga() {\r\n  yield takeLatest(FETCH_TODAY_SPOTLIGHT, fetchTodaysSpotlight);\r\n}\r\n\r\nexport default todaysSpotlightSaga;\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport ApiService from \"../../../utils/services\";\r\nimport { FETCH_BLOG_DETAIL } from \"./blogdetailConstants\";\r\nimport {\r\n  fetchingBlogDeatil,\r\n  fetchBlogDeatilSuccess,\r\n  fetchBlogDeatilError\r\n} from \"./blogdetailActions\";\r\n\r\nfunction* fetchBlogDetail(payload) {\r\n  try {\r\n    yield put(fetchingBlogDeatil());\r\n    const {\r\n      data: { success, message, data }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"blogDetails\",\r\n      appendUrl: `/${payload.blogId}`\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchBlogDeatilSuccess(data));\r\n    } else {\r\n      return yield put(fetchBlogDeatilError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchBlogDeatilError(err));\r\n  }\r\n}\r\n\r\nexport function* blogDetailSaga() {\r\n  yield takeLatest(FETCH_BLOG_DETAIL, fetchBlogDetail);\r\n}\r\n\r\nexport default blogDetailSaga;\r\n","import { all } from \"redux-saga/effects\";\r\nimport app from \"./app/containers/app/appSaga\";\r\nimport todaysSpotlightSaga from \"./app/containers/todaysSpotlight/todaysSpotlightSaga\";\r\nimport blogDetailSaga from \"./app/containers/pages/blogdetail/blogdetailSaga\";\r\n\r\nconst callSagas = sagas => {\r\n  const calledSagaList = [];\r\n  sagas.forEach(saga => {\r\n    calledSagaList.push(saga());\r\n  });\r\n  return calledSagaList;\r\n};\r\n\r\nexport default function* rootSaga() {\r\n  yield all([...callSagas([app, todaysSpotlightSaga, blogDetailSaga])]);\r\n}\r\n","import \"@babel/polyfill\";\r\nimport React from \"react\";\r\nimport { render, hydrate } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Loadable from \"react-loadable\";\r\nimport { Router } from \"react-router-dom\";\r\nimport createStore from \"./store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"./app/styles/main.scss\";\r\nimport App from \"./app/containers/app\";\r\nimport rootSaga from \"./rootSagas\";\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n// Create a store and get back itself and its history object\r\nconst { store, history } = createStore();\r\nstore.runSaga(rootSaga);\r\n\r\n// Running locally, we should run on a <ConnectedRouter /> rather than on a <StaticRouter /> like on the server\r\n// Let's also let React Frontload explicitly know we're not rendering on the server here\r\nconst Application = (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nconst root = document.querySelector(\"#root\");\r\n\r\nif (root.hasChildNodes() === true) {\r\n  // If it's an SSR, we use hydrate to get fast page loads by just\r\n  // attaching event listeners after the initial render\r\n  Loadable.preloadReady().then(() => {\r\n    hydrate(Application, root);\r\n  });\r\n} else {\r\n  // If we're not running on the server, just render like normal\r\n  render(Application, root);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fromJS } from 'immutable';\r\nimport rootReducer from \"./rootReducer\";\r\nimport { isServer } from \"./app/utils/common\";\r\n\r\nexport default (url = \"/\") => {\r\n  // Create a history depending on the environment\r\n  const history = isServer\r\n    ? createMemoryHistory({\r\n        initialEntries: [url]\r\n      })\r\n    : createBrowserHistory();\r\n\r\n  const enhancers = [];\r\n\r\n  // Dev tools are helpful\r\n  if (process.env.NODE_ENV === \"development\" && !isServer) {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\n    if (typeof devToolsExtension === \"function\") {\r\n      enhancers.push(devToolsExtension());\r\n    }\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = [routerMiddleware(history), sagaMiddleware];\r\n  const composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n  );\r\n\r\n  // Do we have preloaded state available? Great, save it.\r\n  const initialState = !isServer ? window.__PRELOADED_STATE__ : {};\r\n\r\n  // Delete it once we have it stored in a variable\r\n  if (!isServer) {\r\n    delete window.__PRELOADED_STATE__;\r\n  }\r\n\r\n  // Create the store\r\n  const store = createStore(\r\n    rootReducer,\r\n    fromJS(initialState),\r\n    composedEnhancers\r\n  );\r\n  store.runSaga = sagaMiddleware.run;\r\n\r\n  return {\r\n    store,\r\n    history\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./layout.scss\";\r\n\r\nexport const Row = ({ children, className }) => (\r\n  <div className={`row ${className ? className : \"\"}`}>{children}</div>\r\n);\r\n\r\nexport const Container = ({ children }) => (\r\n  <div className=\"container\">{children}</div>\r\n);\r\n\r\nexport const ContainerFluid = ({ children }) => (\r\n  <div className=\"container-fluid\">{children}</div>\r\n);\r\n\r\nexport const Flex = ({ children, direction }) => {\r\n  const style = {\r\n    display: \"flex\",\r\n    flexDirection: direction || \"row\",\r\n    flexWrap: \"wrap\"\r\n  };\r\n  return <div style={style}>{children}</div>;\r\n};\r\n\r\nexport const Col = ({ children, xs, sm, md, lg, className }) => {\r\n  let classes = \"\";\r\n  if (xs) {\r\n    classes = `col-xs-${xs}`;\r\n  }\r\n  if (sm) {\r\n    classes = `${classes} col-sm-${sm}`;\r\n  }\r\n  if (md) {\r\n    classes = `${classes} col-md-${md}`;\r\n  }\r\n  if (lg) {\r\n    classes = `${classes} col-lg-${lg}`;\r\n  }\r\n  if (className) {\r\n    classes = `${classes} ${className}`;\r\n  }\r\n  return <div className={classes}>{children}</div>;\r\n};\r\n","import QueryString from \"query-string\";\r\nimport moment from \"moment\";\r\n\r\n// A nice helper to tell us if we're on the server\r\nexport const isServer = !(\r\n  typeof window !== \"undefined\" &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\n// Set Values in local storage\r\nexport const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n// Get Values from local storage\r\nexport const getLocalStorage = key => {\r\n  let data = localStorage.getItem(key);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// Find a value in arr of objects by id\r\nexport const findValueById = (arr, id) => {\r\n  let list = arr.filter(item => item.id === id)[0];\r\n  if (list) {\r\n    return list.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\n// Process Query Params for API Payload\r\nexport const processQueryParams = (location, storeFilters) => {\r\n  let queryParams = QueryString.parse(location.search, {\r\n    ignoreQueryPrefix: true\r\n  });\r\n  if (\r\n    queryParams &&\r\n    queryParams.category &&\r\n    typeof queryParams.category === \"string\"\r\n  ) {\r\n    queryParams.category = [queryParams.category];\r\n  }\r\n  const payload = { ...storeFilters, ...queryParams };\r\n  payload.limit = queryParams.limit\r\n    ? parseInt(queryParams.limit)\r\n    : storeFilters.limit;\r\n  payload.offset = queryParams.offset\r\n    ? parseInt(queryParams.offset)\r\n    : storeFilters.offset;\r\n  return payload;\r\n};\r\n\r\n// Remove all the empty & null value keys from the object\r\nexport const cleanObject = object => {\r\n  let cleanObject = {};\r\n  let keys = Object.keys(object);\r\n  if (keys) {\r\n    keys.forEach(key => {\r\n      let value = object[key];\r\n      if (value !== \"\" && value !== null && value.length !== 0) {\r\n        cleanObject[key] = value;\r\n      }\r\n    });\r\n  }\r\n  return cleanObject;\r\n};\r\n\r\n// Get Category Data from Blog\r\nexport const getCategoryDataFromBlog = (categories, blog) => {\r\n  if (blog && blog.category && categories) {\r\n    const blogFirstCategory = blog.category[0];\r\n    const matchedCategories = categories.filter(\r\n      cat => cat._id.toString() === blogFirstCategory\r\n    );\r\n    if (matchedCategories.length > 0) {\r\n      return matchedCategories[0];\r\n    }\r\n    return {};\r\n  }\r\n  return {};\r\n};\r\n\r\n// Get Blog URL\r\nexport const getBlogUrl = blog => {\r\n  if (blog) {\r\n    return `/blog/${blog.title\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .join(\"-\").replace(/[&/\\\\#,+()$~%.'\":*?<>{}]/g, '')}/${blog._id}`;\r\n  }\r\n  return \"\";\r\n};\r\n\r\n// Get Category URL\r\nexport const getCategoryUrl = category => {\r\n  if (category && category.name) {\r\n    return `/category/${category.name\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .join(\"-\")}/${category._id}`;\r\n  }\r\n  return \"\";\r\n};\r\n\r\n// Get Time String\r\nexport const getTimeString = date => {\r\n  if (date) {\r\n    return moment(date).format(\"Do MMM, YYYY\");\r\n  }\r\n  return \"Time is not Available\";\r\n};\r\n\r\n// Get Blog Short Description (120 char)\r\nexport const extractShortDescription = (htmlString, length = 120) => {\r\n  if (htmlString) {\r\n    const p = document.createElement(\"p\");\r\n    p.innerHTML = htmlString;\r\n    const description = p.textContent || p.innerText;\r\n    return description.slice(0, length);\r\n  }\r\n  return \"\";\r\n};\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  APP_STATE_KEY,\r\n  CATEGORY_STATE_KEY,\r\n  TRENDING_BLOGS_STATE_KEY\r\n} from \"./appConstants\";\r\n\r\n// Select App State\r\nexport const appState = state => state.get(APP_STATE_KEY);\r\n\r\n// Category Selectors\r\nexport const categoryState = state => state.get(CATEGORY_STATE_KEY);\r\nexport const selectCategoryIsFetching = createSelector(\r\n  categoryState,\r\n  state => state.get(\"isFetching\")\r\n);\r\nexport const selectCategoryList = createSelector(\r\n  categoryState,\r\n  state => state && state.get(\"list\").toJS()\r\n);\r\nexport const selectCategoryError = createSelector(\r\n  categoryState,\r\n  state => state.get(\"error\")\r\n);\r\n\r\n// Trending Blogs Selectors\r\nexport const trendingBlogsState = state => state.get(TRENDING_BLOGS_STATE_KEY);\r\nexport const selectTrendingBlogsIsFetching = createSelector(\r\n  trendingBlogsState,\r\n  state => state.get(\"isFetching\")\r\n);\r\nexport const selectTrendingBlogsList = createSelector(\r\n  trendingBlogsState,\r\n  state => state && state.get(\"list\").toJS()\r\n);\r\nexport const selectTrendingBlogsError = createSelector(\r\n  trendingBlogsState,\r\n  state => state.get(\"error\")\r\n);\r\n","import {\r\n  FETCH_TODAY_SPOTLIGHT,\r\n  FETCHING_TODAY_SPOTLIGHT,\r\n  FETCH_TODAY_SPOTLIGHT_SUCCESS,\r\n  FETCH_TODAY_SPOTLIGHT_ERROR\r\n} from \"./todaysSpotlightConstants\";\r\n\r\n// Today's Spotlight\r\nexport const fetchTodaySpotlight = () => ({ type: FETCH_TODAY_SPOTLIGHT });\r\nexport const fetchingTodaySpotlight = () => ({\r\n  type: FETCHING_TODAY_SPOTLIGHT\r\n});\r\nexport const fetchTodaySpotlightSuccess = data => ({\r\n  type: FETCH_TODAY_SPOTLIGHT_SUCCESS,\r\n  data\r\n});\r\nexport const fetchTodaySpotlightError = data => ({\r\n  type: FETCH_TODAY_SPOTLIGHT_ERROR,\r\n  data\r\n});\r\n","import {\r\n  FETCHING_BLOG_DETAIL,\r\n  FETCH_BLOG_DETAIL,\r\n  FETCH_BLOG_DETAIL_SUCCESS,\r\n  FETCH_BLOG_DETAIL_ERROR,\r\n  RESET_BLOG_DETAIL\r\n} from \"./blogdetailConstants\";\r\n\r\n// Blog Detail\r\nexport const fetchBlogDeatil = blogId => ({ type: FETCH_BLOG_DETAIL, blogId });\r\nexport const fetchingBlogDeatil = () => ({\r\n  type: FETCHING_BLOG_DETAIL\r\n});\r\nexport const fetchBlogDeatilSuccess = data => ({\r\n  type: FETCH_BLOG_DETAIL_SUCCESS,\r\n  data\r\n});\r\nexport const fetchBlogDeatilError = data => ({\r\n  type: FETCH_BLOG_DETAIL_ERROR,\r\n  data\r\n});\r\nexport const resetBlogDetail = () => ({ type: RESET_BLOG_DETAIL });\r\n"],"sourceRoot":""}