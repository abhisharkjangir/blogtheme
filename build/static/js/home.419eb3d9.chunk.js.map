{"version":3,"sources":["app/constants/meta.js","app/assets/imgs/index.js","app/components/page/page.js","app/components/page/index.js","app/components/icon/icon.js","app/components/slider/slider.js","app/components/smallBlogCard/smallBlogCard.js","app/components/sliderGrid/sliderGrid.js","app/containers/sliderGrid/sliderGrid.js","app/components/borderHeading/borderHeading.js","app/components/common/Image/image.js","app/components/todaysSpotlight/todaysSpotlight.js","app/containers/todaysSpotlight/todaysSpotlight.js","app/components/pages/home/home.js","app/containers/pages/home/home.js","app/containers/pages/home/index.js"],"names":["_assets_imgs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","default","title","description","image","LOGO","twitter","sep","siteURL","keywords","facebookAppId","updated","Date","toDateString","published","contentType","home","id","notfound","d","IMG_PATH","concat","SITE_URL","Meta","defaultTitle","defaultDescription","defaultKeywords","defaultImage","defaultTwitter","defaultSep","defaultUpdated","defaultPublished","defaultContentType","Page","pathname","_ref","noCrawl","category","tags","theTitle","substring","theDescription","theImage","metaTags","itemprop","content","name","property","push","_this$props","this","props","children","className","rest","Object","objectWithoutProperties","react_default","a","createElement","Helmet_default","htmlAttributes","lang","itemscope","undefined","itemtype","schema","link","rel","href","location","meta","getMetaTags","Component","withRouter","page","Icon","defaultSetting","dots","infinite","speed","slidesToShow","slidesToScroll","lazyLoad","autoplay","arrows","SlickSlider","settings","merge","settting","react_slick_lib_default","assign","SmallBlogCard","blog","categories","getCategoryDataFromBlog","src","imageSrc","alt","Link","to","getCategoryUrl","getBlogUrl","SliderGrid","renderSmallTile","_this","categoryList","key","_id","renderBigTile","author","icon","rednerSkeleton","tiles","layout","lg","slice","map","tile","renderBlogSlider","trendingBlogList","length","slider","smallBlogCard_smallBlogCard","_this2","_this$props2","trendingBlogsIsFetching","errorBoundary","React","PureComponent","mapStateToProps","createStructuredSelector","categoryIsFetching","selectCategoryIsFetching","selectCategoryList","categoryError","selectCategoryError","selectTrendingBlogsIsFetching","selectTrendingBlogsList","trendingBlogsError","selectTrendingBlogsError","connect","BorderHeading","text","Image","TodaysSpotlight","renderSkeleton","cards","Fragment","borderHeading_borderHeading","card","Image_image","getTimeString","createdDate","dispatch","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","containers_sliderGrid_sliderGrid","containers_todaysSpotlight_todaysSpotlight","pages_home_home"],"mappings":"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","file":"static/js/home.419eb3d9.chunk.js","sourcesContent":["import { LOGO } from \"../assets/imgs\";\r\n\r\nexport default {\r\n  default: {\r\n    title: \"Blog Theme\",\r\n    description: \"Bloging Website\",\r\n    image: LOGO,\r\n    twitter: \"\",\r\n    sep: \" : \",\r\n    siteURL: \"\",\r\n    keywords: \"\",\r\n    facebookAppId: \"XXXXXXXXX\",\r\n    updated: new Date().toDateString(),\r\n    published: new Date().toDateString(),\r\n    contentType: \"website\"\r\n  },\r\n  home: {\r\n    id: \"home\",\r\n    title: \"Home\",\r\n    description: \"Blog Theme\"\r\n  },\r\n  notfound: {\r\n    id: \"notfound\",\r\n    title: \"Oops! 404\",\r\n    description: \"This is not the web page you are looking for.\"\r\n  }\r\n};\r\n","const IMG_PATH = `https://s3.ap-south-1.amazonaws.com/imabhi.in/`;\r\n\r\nexport const ABHISHAR = `${IMG_PATH}abhishar.png`;\r\nexport const ANGULAR = `${IMG_PATH}angular.svg`;\r\nexport const BG_IMG_1 = `${IMG_PATH}bgimg1.png`;\r\nexport const BG_IMG_2 = `${IMG_PATH}bgimg2.png`;\r\nexport const CSS3 = `${IMG_PATH}css-3.svg`;\r\nexport const DAUBLE_LOGO = `${IMG_PATH}daublelogo.png`;\r\nexport const DOCUMENTED_CODE = `${IMG_PATH}DOCUMENTED_CODE.png`;\r\nexport const FACEBOOK = `${IMG_PATH}facebook.svg`;\r\nexport const GITHUB = `${IMG_PATH}github-icon.svg`;\r\nexport const HTML5 = `${IMG_PATH}html-5.svg`;\r\nexport const INSTAGRAM = `${IMG_PATH}instagram-icon.svg`;\r\nexport const JAVASCRIPT = `${IMG_PATH}javascript.svg`;\r\nexport const LOGO = 'https://s3.ap-south-1.amazonaws.com/meuzicassets/meuzic-horizontal-transparent.png';\r\nexport const MAP = `${IMG_PATH}map.png`;\r\nexport const MEDZIN_LOGO = `${IMG_PATH}medzinlogo.png`;\r\nexport const MM_LOGO = `${IMG_PATH}mmlogo.png`;\r\nexport const PIT_LOGO = `${IMG_PATH}pitlogo.png`;\r\nexport const PRO_DAUBLE = `${IMG_PATH}pro-dauble.png`;\r\nexport const PRO_MEDZIN = `${IMG_PATH}pro-medzin.png`;\r\nexport const PRO_MM = `${IMG_PATH}pro-mm.png`;\r\nexport const PRO_PIT = `${IMG_PATH}pro-pit.png`;\r\nexport const PRO_TT = `${IMG_PATH}pro-tt.png`;\r\nexport const REACT = `${IMG_PATH}react.svg`;\r\nexport const REDUX = `${IMG_PATH}redux.svg`;\r\nexport const RESPONSIVE_DESIGN = `${IMG_PATH}RESPONSIVE_DESIGN.png`;\r\nexport const SASS = `${IMG_PATH}sass.svg`;\r\nexport const THIRD_PARTY_INTEGRATION = `${IMG_PATH}THIRD_PARTY%20INTEGRATI_N.png`;\r\nexport const TT_LOGO = `${IMG_PATH}ttlogo.png`;\r\nexport const TWITTER = `${IMG_PATH}twitter.svg`;\r\nexport const UI_FRAMEWORKS = `${IMG_PATH}UI_FRAMEWOKS.png`;\r\n\r\nexport default {};\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Helmet from \"react-helmet\";\r\nimport Meta from \"../../constants/meta\";\r\n\r\nconst SITE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? Meta.default.siteURL\r\n    : Meta.default.siteURL;\r\n\r\nconst FACEBOOK_APP_ID = \"XXXXXXXXX\";\r\n\r\nconst defaultTitle = Meta.default.title;\r\nconst defaultDescription = Meta.default.description;\r\nconst defaultKeywords = Meta.default.keywords;\r\nconst defaultImage = Meta.default.image;\r\nconst defaultTwitter = Meta.default.twitter;\r\nconst defaultSep = Meta.default.sep;\r\nconst defaultUpdated = Meta.default.updated;\r\nconst defaultPublished = Meta.default.published;\r\nconst defaultContentType = Meta.default.contentType;\r\n\r\nclass Page extends Component {\r\n  getMetaTags(\r\n    {\r\n      title,\r\n      description,\r\n      image,\r\n      contentType,\r\n      twitter,\r\n      noCrawl,\r\n      published,\r\n      updated,\r\n      category,\r\n      tags,\r\n      keywords\r\n    },\r\n    pathname\r\n  ) {\r\n    const theTitle = title\r\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\r\n      : defaultTitle;\r\n    const theDescription = description\r\n      ? description.substring(0, 155)\r\n      : defaultDescription;\r\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\r\n\r\n    const metaTags = [\r\n      { itemprop: \"name\", content: theTitle },\r\n      { itemprop: \"description\", content: theDescription },\r\n      { itemprop: \"image\", content: theImage },\r\n      { name: \"description\", content: theDescription },\r\n      { name: \"keywords\", content: keywords || defaultKeywords },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n      { name: \"twitter:site\", content: defaultTwitter },\r\n      { name: \"twitter:title\", content: theTitle },\r\n      { name: \"twitter:description\", content: theDescription },\r\n      { name: \"twitter:creator\", content: twitter || defaultTwitter },\r\n      { name: \"twitter:image:src\", content: theImage },\r\n      { property: \"og:title\", content: theTitle },\r\n      { property: \"og:type\", content: contentType || defaultContentType },\r\n      { property: \"og:url\", content: SITE_URL + pathname },\r\n      { property: \"og:image\", content: theImage },\r\n      { property: \"og:description\", content: theDescription },\r\n      { property: \"og:site_name\", content: defaultTitle },\r\n      { property: \"fb:app_id\", content: FACEBOOK_APP_ID }\r\n    ];\r\n\r\n    if (noCrawl) {\r\n      metaTags.push({ name: \"robots\", content: \"noindex, nofollow\" });\r\n    } else {\r\n      metaTags.push({ name: \"robots\", content: \"index, follow\" });\r\n    }\r\n\r\n    if (published) {\r\n      metaTags.push({\r\n        name: \"article:published_time\",\r\n        content: published || defaultPublished\r\n      });\r\n    }\r\n    if (updated) {\r\n      metaTags.push({\r\n        name: \"article:modified_time\",\r\n        content: updated || defaultUpdated\r\n      });\r\n    }\r\n    if (category) {\r\n      metaTags.push({ name: \"article:section\", content: category });\r\n    }\r\n    if (tags) {\r\n      metaTags.push({ name: \"article:tag\", content: tags });\r\n    }\r\n\r\n    return metaTags;\r\n  }\r\n\r\n  render() {\r\n    const { children, id, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div id={id} className={className}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: \"en\",\r\n            itemscope: undefined,\r\n            itemtype: `http://schema.org/${rest.schema || \"WebPage\"}`\r\n          }}\r\n          title={\r\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\r\n          }\r\n          link={[\r\n            {\r\n              rel: \"canonical\",\r\n              href: SITE_URL + this.props.location.pathname\r\n            }\r\n          ]}\r\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","export { default } from \"./page\";\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ name, className }) => {\r\n  return <i className={`icon-${name} ${className ? className : \"\"}`} />;\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst defaultSetting = {\r\n  dots: true,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 1,\r\n  lazyLoad: true,\r\n  autoplay: true,\r\n  arrows: true\r\n};\r\n\r\nconst SlickSlider = ({ settings, children, merge }) => {\r\n  const settting = settings || defaultSetting;\r\n  return (\r\n    <Slider {...settting} {...merge}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default SlickSlider;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./smallBlogCard.scss\";\r\nimport {\r\n  getCategoryDataFromBlog,\r\n  getCategoryUrl,\r\n  getBlogUrl\r\n} from \"../../utils/common\";\r\n\r\nconst SmallBlogCard = ({ blog, categories }) => {\r\n  let category = getCategoryDataFromBlog(categories, blog);\r\n  return (\r\n    <div className=\"small-blog-card\">\r\n      <img src={blog.imageSrc} alt={blog.title} />\r\n      <div className=\"blog-detail\">\r\n        <Link to={getCategoryUrl(category)} className=\"text-muted fs-12\">\r\n          {category.name}\r\n        </Link>\r\n        <br />\r\n        <Link to={getBlogUrl(blog)}>{blog.title}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallBlogCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\nimport { Row, Col } from \"../layout\";\r\nimport \"./sliderGrid.scss\";\r\nimport Icon from \"../icon/icon\";\r\nimport SlickSlider from \"../slider/slider\";\r\nimport SmallBlogCard from \"../smallBlogCard\";\r\nimport {\r\n  getCategoryDataFromBlog,\r\n  getBlogUrl,\r\n  getCategoryUrl\r\n} from \"../../utils/common\";\r\n\r\nclass SliderGrid extends React.PureComponent {\r\n  renderSmallTile = blog => {\r\n    const category = getCategoryDataFromBlog(this.props.categoryList, blog);\r\n    return (\r\n      <div key={blog._id} className=\"blog-card\">\r\n        <img src={blog.imageSrc} alt={blog.title} />\r\n        <div className=\"blog-content\">\r\n          <Link to={getCategoryUrl(category)} className=\"tag\">\r\n            {category.name}\r\n          </Link>\r\n          <Link to={getBlogUrl(blog)}>{blog.title}</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBigTile = blog => {\r\n    const category = getCategoryDataFromBlog(this.props.categoryList, blog);\r\n    return (\r\n      <div key={blog._id} className=\"blog-card full\">\r\n        <img src={blog.imageSrc} alt={blog.title} />\r\n        <div className=\"blog-content\">\r\n          <Link to={getCategoryUrl(category)} className=\"tag\">\r\n            {category.name}\r\n          </Link>\r\n          <Link to={getBlogUrl(blog)}>{blog.title}</Link>\r\n          <div className=\"blog-detail\">\r\n            <img\r\n              src=\"https://secure.gravatar.com/avatar/f88c13d62ba761a92211e266c22dbb1f?s=56&d=mm&r=g\"\r\n              className=\"mr-3\"\r\n              alt={blog.author}\r\n            />\r\n            {blog.author}, 5 Months ago\r\n            <span className=\"mr-1 ml-2 border-right\" />\r\n            <Icon name=\"bubble\" className=\"mr-1 ml-2\" /> 96\r\n            <span className=\"mr-1 ml-2 border-right\" />\r\n            <Icon name=\"clock\" className=\"mr-1 ml-1\" /> 3 min read\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  rednerSkeleton = () => {\r\n    const tiles = [1, 2, 3, 4, 5];\r\n    return (\r\n      <div className=\"slider-grid-container\">\r\n        <Row className=\"m-0\">\r\n          <Col className=\"p-0\" lg={3}>\r\n            {tiles &&\r\n              tiles\r\n                .slice(0, 2)\r\n                .map(tile => <div key={tile} className=\"blog-card\" />)}\r\n          </Col>\r\n          <Col className=\"p-0\" lg={6}>\r\n            {tiles &&\r\n              tiles\r\n                .slice(2, 3)\r\n                .map(tile => <div key={tile} className=\"blog-card full\" />)}\r\n          </Col>\r\n          <Col className=\"p-0\" lg={3}>\r\n            {tiles &&\r\n              tiles\r\n                .slice(3, 5)\r\n                .map(tile => <div key={tile} className=\"blog-card\" />)}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBlogSlider = () => {\r\n    const { trendingBlogList, categoryList } = this.props;\r\n    const length = trendingBlogList.length;\r\n    return (\r\n      <div className=\"mt-4 mb-4 pl-1 pr-1\">\r\n        <SlickSlider merge={{ dots: false, slidesToShow: 3, autoplay: true }}>\r\n          {trendingBlogList &&\r\n            trendingBlogList\r\n              .slice(5, length)\r\n              .map(blog => (\r\n                <SmallBlogCard blog={blog} categories={categoryList} />\r\n              ))}\r\n        </SlickSlider>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { trendingBlogsIsFetching, trendingBlogList } = this.props;\r\n    if (trendingBlogsIsFetching && trendingBlogList.length === 0)\r\n      return this.rednerSkeleton();\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"slider-grid-container\">\r\n          <Row className=\"m-0\">\r\n            <Col className=\"p-0\" lg={3}>\r\n              {trendingBlogList &&\r\n                trendingBlogList\r\n                  .slice(0, 2)\r\n                  .map(blog => this.renderSmallTile(blog))}\r\n            </Col>\r\n            <Col className=\"p-0\" lg={6}>\r\n              {trendingBlogList &&\r\n                trendingBlogList\r\n                  .slice(2, 3)\r\n                  .map(blog => this.renderBigTile(blog))}\r\n            </Col>\r\n            <Col className=\"p-0\" lg={3}>\r\n              {trendingBlogList &&\r\n                trendingBlogList\r\n                  .slice(3, 5)\r\n                  .map(blog => this.renderSmallTile(blog))}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"m-0\">\r\n            <Col lg=\"12\" className=\"p-0\">\r\n              {this.renderBlogSlider()}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SliderGrid;\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport SliderGrid from \"../../components/sliderGrid\";\r\nimport {\r\n  selectCategoryIsFetching,\r\n  selectCategoryList,\r\n  selectCategoryError,\r\n  selectTrendingBlogsIsFetching,\r\n  selectTrendingBlogsList,\r\n  selectTrendingBlogsError\r\n} from \"../app/appSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categoryIsFetching: selectCategoryIsFetching,\r\n  categoryList: selectCategoryList,\r\n  categoryError: selectCategoryError,\r\n  trendingBlogsIsFetching: selectTrendingBlogsIsFetching,\r\n  trendingBlogList: selectTrendingBlogsList,\r\n  trendingBlogsError: selectTrendingBlogsError\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(SliderGrid);\r\n","import React from \"react\";\r\nimport \"./borderHeading.scss\";\r\nconst BorderHeading = ({ text }) => {\r\n  return (\r\n    <div className=\"heading-wrapper\">\r\n      <h2 className=\"heading\">{text}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BorderHeading;\r\n","import React from \"react\";\r\n\r\nconst Image = ({ src, alt, className }) => {\r\n  return <img src={src} alt={alt} className={className ? className : \"\"} />;\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./todaysSpotlight.scss\";\r\nimport {\r\n  getCategoryDataFromBlog,\r\n  getCategoryUrl,\r\n  getBlogUrl,\r\n  getTimeString\r\n} from \"../../utils/common\";\r\nimport BorderHeading from \"../borderHeading/borderHeading\";\r\nimport SlickSlider from \"../slider/slider\";\r\nimport Image from \"../common/Image/image\";\r\nimport Icon from \"../icon/icon\";\r\nimport { REACT } from \"../../assets/imgs\";\r\n\r\nclass TodaysSpotlight extends React.PureComponent {\r\n  renderSkeleton = () => {\r\n    const cards = [1, 2, 3, 4];\r\n    return (\r\n      <React.Fragment>\r\n        <BorderHeading text=\"Today's Spotlight\" />\r\n        <SlickSlider\r\n          merge={{ dots: false, slidesToShow: 3, slidesToScroll: 3 }}\r\n        >\r\n          {cards &&\r\n            cards.map(card => (\r\n              <div key={card} className=\"medium-skeleton-card\" />\r\n            ))}\r\n        </SlickSlider>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { trendingBlogsIsFetching, trendingBlogList } = this.props;\r\n    if (trendingBlogsIsFetching && trendingBlogList.length === 0)\r\n      return this.renderSkeleton();\r\n    return (\r\n      <div className=\"todays-spotlight\">\r\n        <BorderHeading text=\"Today's Spotlight\" />\r\n        <SlickSlider\r\n          merge={{ dots: false, slidesToShow: 3, slidesToScroll: 3 }}\r\n        >\r\n          {trendingBlogList &&\r\n            trendingBlogList.map(blog => (\r\n              <div key={blog._id} className=\"medium-blog-card\">\r\n                <Image src={blog.imageSrc} alt={blog.title} />\r\n                <Link to={getBlogUrl(blog)} className=\"title\">\r\n                  {blog.title}\r\n                </Link>\r\n                <p className=\"detail text-muted\">\r\n                  {blog.author}, {getTimeString(blog.createdDate)}\r\n                  <span className=\"mr-1 ml-2 border-right\" />\r\n                  <Icon name=\"clock\" className=\"mr-1 ml-1\" /> 3 min read\r\n                </p>\r\n              </div>\r\n            ))}\r\n        </SlickSlider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodaysSpotlight;\r\n","import { connect } from \"react-redux\";\r\nimport TodaysSpotlight from \"../../components/todaysSpotlight\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectCategoryIsFetching,\r\n  selectCategoryList,\r\n  selectCategoryError,\r\n  selectTrendingBlogsIsFetching,\r\n  selectTrendingBlogsList,\r\n  selectTrendingBlogsError\r\n} from \"../app/appSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categoryIsFetching: selectCategoryIsFetching,\r\n  categoryList: selectCategoryList,\r\n  categoryError: selectCategoryError,\r\n  trendingBlogsIsFetching: selectTrendingBlogsIsFetching,\r\n  trendingBlogList: selectTrendingBlogsList,\r\n  trendingBlogsError: selectTrendingBlogsError\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodaysSpotlight);\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\nimport Page from \"../../page\";\r\nimport { Container, Col, Row } from \"../../layout\";\r\nimport Meta from \"../../../constants/meta\";\r\nimport SliderGrid from \"../../../containers/sliderGrid\";\r\nimport TodaysSpotlight from \"../../../containers/todaysSpotlight\";\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page {...Meta.home}>\r\n        <div className=\"home-page\">\r\n          <Container>\r\n            <SliderGrid />\r\n            <Row>\r\n              <Col lg={9}>\r\n                <TodaysSpotlight />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Home from \"../../../components/pages/home\";\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","export { default } from \"./home\";\r\n"],"sourceRoot":""}