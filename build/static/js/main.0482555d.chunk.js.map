{"version":3,"sources":["app/appConstants.js","app/appReducer.js","app/routes/home/HomeReducer.js","app/components/common/loader/loaderConstants.js","app/components/common/loader/loaderReducer.js","rootReducer.js","app/routes/home/HomeConstants.js","app/utils/common.js","serviceWorker.js","app/components/header/header.js","app/components/header/index.js","app/appActions.js","app/components/footer/index.js","app/routes/index.js","app/components/scrolltotop/index.js","app/components/common/loader/loader.js","app/components/common/loader/loaderSelectors.js","app/components/common/loader/index.js","app/components/errorBoundary/index.js","app/app.js","app/components/withLocalStorage/index.js","app/index.js","app/appSaga.js","rootSagas.js","index.js","store.js"],"names":["SET_DATA","concat","appInitialState","fromJS","initialState","home","SHOW_LOADER","HIDE_LOADER","loaderInitialState","value","combineReducers","_combineReducers","Object","defineProperty","state","arguments","length","undefined","action","type","merge","data","set","_ref","payload","assign","users","isServer","window","document","createElement","getLocalStorage","key","localStorage","getItem","JSON","parse","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Header","react_default","a","className","React","PureComponent","mapStateToProps","createStructuredSelector","connect","dispatch","setAppData","Footer","year","Date","getFullYear","sidebar","this","props","role","aria-label","href","Component","Home","Loadable","loader","Promise","all","__webpack_require__","e","bind","loading","NotFound","routes","Switch","Route","exact","path","component","ScrollToTop","prevProps","pathname","scrollTo","children","withRouter","Loader","message","loaderState","get","createSelector","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","App","errorBoundary","scrolltotop","id","react_toastify","components_header","common_loader","components_footer","WithLocalStorage","Comp","storage","Storage","allKeys","keys","index","_React$Component","LocalStorage","apply","inherits","createClass","app","appSaga","regenerator_default","wrap","_context","prev","next","t0","stop","_marked","_context2","takeLatest","_marked2","rootSaga","rootSagas_marked","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","url","history","createMemoryHistory","initialEntries","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","compose","applyMiddleware","__PRELOADED_STATE__","store","createStore","rootReducer","runSaga","run","Application","es","Router","react_frontload_lib","noServerRender","src_app","root","querySelector","hasChildNodes","preloadReady","hydrate","render"],"mappings":"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","file":"static/js/main.0482555d.chunk.js","sourcesContent":["export const APP_STATE_KEY = \"app\";\r\nexport const NAMESPACE = \"APP/\";\r\nexport const SET_DATA = `${NAMESPACE}SET_DATA`;\r\n\r\n\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport { SET_DATA } from \"./appConstants\";\r\n\r\nconst appInitialState = fromJS({});\r\n\r\nexport default (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      return state.merge(fromJS(action.data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { HOME_SAVE_USERS } from \"./HomeConstants\";\r\n\r\nconst initialState = { home: \"HomePage\" };\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case HOME_SAVE_USERS:\r\n      return Object.assign({}, state, { users: payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOADER_STATE_KEY = 'loader';\r\n\r\nexport const NAMESPACE = \"LOADER/\";\r\nexport const SHOW_LOADER = `${NAMESPACE}SHOW`;\r\nexport const HIDE_LOADER = `${NAMESPACE}HIDE`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n} from \"./loaderConstants\";\r\n\r\n\r\nconst loaderInitialState = fromJS({\r\n  value: false\r\n});\r\n\r\nexport default (state = loaderInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return state.set(\"value\", true).set(\"message\", action.data);\r\n    case HIDE_LOADER:\r\n    return state.set(\"value\", false).set(\"message\", undefined);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux-immutable\";\r\n\r\n// App Reducer\r\nimport { APP_STATE_KEY } from \"./app/appConstants\";\r\nimport AppReducer from \"./app/appReducer\";\r\n\r\n// Home Reducer\r\nimport { HOME_STATE_KEY } from \"./app/routes/home/HomeConstants\";\r\nimport HomeReducer from \"./app/routes/home/HomeReducer\";\r\n\r\n// Loader Reducer\r\nimport { LOADER_STATE_KEY } from \"./app/components/common/loader/loaderConstants\";\r\nimport loaderReducer from \"./app/components/common/loader/loaderReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  [APP_STATE_KEY]: AppReducer,\r\n  [LOADER_STATE_KEY]: loaderReducer,\r\n  [HOME_STATE_KEY]: HomeReducer,\r\n});\r\n","export const HOME_STATE_KEY = \"home\";\r\nexport const HOME_SAVE_USERS = \"HOME_SAVE_USERS\";\r\n","import QueryString from \"query-string\";\r\n\r\n// A nice helper to tell us if we're on the server\r\nexport const isServer = !(\r\n  typeof window !== \"undefined\" &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\n// Set Values in local storage\r\nexport const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n// Get Values from local storage\r\nexport const getLocalStorage = key => {\r\n  let data = localStorage.getItem(key);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// Find a value in arr of objects by id\r\nexport const findValueById = (arr, id) => {\r\n  let list = arr.filter(item => item.id === id)[0];\r\n  if (list) {\r\n    return list.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\n// Process Query Params for API Payload\r\nexport const processQueryParams = (location, storeFilters) => {\r\n  let queryParams = QueryString.parse(location.search, {\r\n    ignoreQueryPrefix: true\r\n  });\r\n  if (\r\n    queryParams &&\r\n    queryParams.category &&\r\n    typeof queryParams.category === \"string\"\r\n  ) {\r\n    queryParams.category = [queryParams.category];\r\n  }\r\n  const payload = { ...storeFilters, ...queryParams };\r\n  payload.limit = queryParams.limit\r\n    ? parseInt(queryParams.limit)\r\n    : storeFilters.limit;\r\n  payload.offset = queryParams.offset\r\n    ? parseInt(queryParams.offset)\r\n    : storeFilters.offset;\r\n  return payload;\r\n};\r\n\r\n// Remove all the empty & null value keys from the object\r\nexport const cleanObject = object => {\r\n  let cleanObject = {};\r\n  let keys = Object.keys(object);\r\n  if (keys) {\r\n    keys.forEach(key => {\r\n      let value = object[key];\r\n      if (value !== \"\" && value !== null && value.length !== 0) {\r\n        cleanObject[key] = value;\r\n      }\r\n    });\r\n  }\r\n  return cleanObject;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nclass Header extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        Header\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { connect } from \"react-redux\";\r\nimport Header from \"./header\";\r\nimport { setAppData } from \"../../appActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setAppData: data => dispatch(setAppData(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import {\r\n  SET_DATA,\r\n} from \"./appConstants\";\r\n\r\n// APP DATA\r\nexport const setAppData = data => ({ type: SET_DATA, data });\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    let year = new Date().getFullYear();\r\n    const { sidebar } = this.props;\r\n    return (\r\n      <footer className={sidebar ? 'footer' : 'footer-no-sidebar'}>\r\n       Copyright © {year} <span className='float-right'>Made with <span role='img' aria-label='heart'>💖</span> by <a href=\"http://abhijangir.me\">Abhishar Jangir.</a></span>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\n\r\nconst Home = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"home\" */ \"./home\"),\r\n  loading: () => null\r\n});\r\n\r\n\r\nconst NotFound = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"notfound\" */ \"./notfound\"),\r\n  loading: () => null\r\n});\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route component={NotFound} />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./loader.scss\";\r\nconst Loader = ({ value, message }) => {\r\n  return value ? (\r\n    <div className=\"loader\">{message || \"Loading... Please wait!\"}</div>\r\n  ) : null;\r\n};\r\n\r\nexport default Loader;\r\n","import { createSelector } from \"reselect\";\r\nimport { LOADER_STATE_KEY } from \"./loaderConstants\";\r\n\r\n// Select App State\r\nexport const loaderState = state => state.get(LOADER_STATE_KEY);\r\n\r\n// Select loader -> value\r\nexport const makeSelectLoaderValue = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"value\")\r\n  );\r\n\r\n  // Select loader -> message\r\nexport const makeSelectLoaderMessage = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"message\")\r\n  );\r\n","import { connect } from \"react-redux\";\r\nimport Loader from \"./loader\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  makeSelectLoaderValue,\r\n  makeSelectLoaderMessage\r\n} from \"./loaderSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  value: makeSelectLoaderValue(),\r\n  message: makeSelectLoaderMessage()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Loader);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport Routes from \"./routes\";\r\nimport ScrollToTop from \"./components/scrolltotop\";\r\nimport Loader from \"./components/common/loader\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <ScrollToTop>\r\n          <div id=\"app\">\r\n            <ToastContainer />\r\n            <Header />\r\n            <div id=\"content\" className=\"content\">\r\n              <div className=\"main\">\r\n                <Routes />\r\n              </div>\r\n              <Loader />\r\n              <Footer />\r\n            </div>\r\n          </div>\r\n        </ScrollToTop>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { getLocalStorage, isServer } from \"../../utils/common\";\r\n\r\nconst WithLocalStorage = Comp => {\r\n  let storage = {};\r\n  if (typeof Storage !== undefined && !isServer) {\r\n    let allKeys = Object.keys(localStorage);\r\n    for (let index = 0; index < allKeys.length; index++) {\r\n      storage[allKeys[index]] = getLocalStorage(allKeys[index]);\r\n    }\r\n  }\r\n  return class LocalStorage extends React.Component {\r\n    render() {\r\n      return <Comp storage={storage} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport App from './app';\r\nimport WithLocalStorage from './components/withLocalStorage';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  };\r\n}\r\n\r\nexport default WithLocalStorage(withRouter(connect(mapStateToProps, mapDispatchToProps)(App)));\r\n","import { takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction* app(payload) {\r\n  try {\r\n    yield 'app'\r\n  } catch (error) {}\r\n}\r\n\r\nexport function* appSaga() {\r\n  yield takeLatest(\"APP\", app);\r\n}\r\n\r\nexport default appSaga;\r\n","import { all } from 'redux-saga/effects';\r\nimport app from './app/appSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    app(),\r\n  ]);\r\n}\r\n","import \"@babel/polyfill\";\r\nimport React from \"react\";\r\nimport { render, hydrate } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Loadable from \"react-loadable\";\r\nimport { Frontload } from \"react-frontload\";\r\nimport { Router } from \"react-router-dom\";\r\nimport createStore from \"./store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport \"./app/styles/main.scss\";\r\nimport App from \"./app\";\r\nimport rootSaga from \"./rootSagas\";\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n// Create a store and get back itself and its history object\r\nconst { store, history } = createStore();\r\nstore.runSaga(rootSaga);\r\n\r\n// Running locally, we should run on a <ConnectedRouter /> rather than on a <StaticRouter /> like on the server\r\n// Let's also let React Frontload explicitly know we're not rendering on the server here\r\nconst Application = (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Frontload noServerRender={true}>\r\n        <App />\r\n      </Frontload>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nconst root = document.querySelector(\"#root\");\r\n\r\nif (root.hasChildNodes() === true) {\r\n  // If it's an SSR, we use hydrate to get fast page loads by just\r\n  // attaching event listeners after the initial render\r\n  Loadable.preloadReady().then(() => {\r\n    hydrate(Application, root);\r\n  });\r\n} else {\r\n  // If we're not running on the server, just render like normal\r\n  render(Application, root);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fromJS } from 'immutable';\r\nimport rootReducer from \"./rootReducer\";\r\nimport { isServer } from \"./app/utils/common\";\r\n\r\nexport default (url = \"/\") => {\r\n  // Create a history depending on the environment\r\n  const history = isServer\r\n    ? createMemoryHistory({\r\n        initialEntries: [url]\r\n      })\r\n    : createBrowserHistory();\r\n\r\n  const enhancers = [];\r\n\r\n  // Dev tools are helpful\r\n  if (process.env.NODE_ENV === \"development\" && !isServer) {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\n    if (typeof devToolsExtension === \"function\") {\r\n      enhancers.push(devToolsExtension());\r\n    }\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = [routerMiddleware(history), sagaMiddleware];\r\n  const composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n  );\r\n\r\n  // Do we have preloaded state available? Great, save it.\r\n  const initialState = !isServer ? window.__PRELOADED_STATE__ : {};\r\n\r\n  // Delete it once we have it stored in a variable\r\n  if (!isServer) {\r\n    delete window.__PRELOADED_STATE__;\r\n  }\r\n\r\n  // Create the store\r\n  const store = createStore(\r\n    rootReducer,\r\n    fromJS(initialState),\r\n    composedEnhancers\r\n  );\r\n  store.runSaga = sagaMiddleware.run;\r\n\r\n  return {\r\n    store,\r\n    history\r\n  };\r\n};\r\n"],"sourceRoot":""}